#######服务启动端口####################
server:
  port: 7997
# ################# 访问后台权限##########################################
---
security:
    basic:
      enabled: true
    user:
      name: admin
      password: 123
# ###################运行日志###############################################
---
logging:
  file: logs/fox-discovery.log
  pattern:
    console: '[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96} [%line] - %msg%n'
    file: '[ %-5level] [%date{yyyy-MM-dd HH:mm:ss}] %logger{96} [%line] - %msg%n'

#########服务名称 启动配置类型########
---
spring:
  profiles:
    active: dev
# ########## Eureka 注册##################################
# #####单服务模式#######
---
spring:
  profiles: dev
  cloud:
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*
      preferred-networks:
        - 192.168
        - 10.0.0.0
  application:
      name: fox-discovery1
eureka:
  server:
    enable-self-preservation: false
  instance:
    hostname: localhost
    prefer-ip-address: true
  client:
    register-with-eureka: false
    fetch-registry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
---
spring:
  profiles: test                                 # 指定profile=peer1
  cloud:
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*
      preferred-networks:
        - 192.168
        - 10.0.0.0
  application:
    name: fox-discovery1
server:
  port: 7997   # 注册服务的端口号
eureka:
  #server:
  #  enable-self-preservation: false
  instance:
    hostname: localhost                               # 指定当profile=peer1时，主机名
  client:
    register-with-eureka: false
    fetch-registry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/      # 将自己注册到peer2这个Eureka上面去

---
spring:
  profiles: peer1                                 # 指定profile=peer1
  cloud:
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*
      preferred-networks:
        - 192.168
        - 10.0.0.0
  application:
    name: Eureka-Server1
server:
  port: 7998   # 注册服务的端口号
eureka:
  #server:
  #  enable-self-preservation: false
  instance:
    hostname: peer1                               # 指定当profile=peer1时，主机名
  client:
    register-with-eureka: false
    fetch-registry: false
    serviceUrl:
      defaultZone: http://peer2:7999/eureka/      # 将自己注册到peer2这个Eureka上面去

---
spring:
  profiles: peer2
  cloud:
    inetutils:
      ignored-interfaces:
        - docker0
        - veth.*
      preferred-networks:
        - 192.168
        - 10.0.0.0
  application:
    name: Eureka-Server2
server:
  port: 7999
eureka:
  #server:
  #  enable-self-preservation: false
  instance:
    hostname: peer2
  client:
    register-with-eureka: false
    fetch-registry: false
    serviceUrl:
      defaultZone: http://peer1:7998/eureka/  # 服务注册地址，将自己注册到peer2上去